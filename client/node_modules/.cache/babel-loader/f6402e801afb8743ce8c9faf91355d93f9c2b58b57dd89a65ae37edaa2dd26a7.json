{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sreeyas\\\\OneDrive\\\\Desktop\\\\Blogging Application\\\\client\\\\src\\\\Views\\\\Blogs\\\\Blogs.js\",\n  _s = $RefreshSig$();\n// Views/Blogs/Blogs.js\nimport { useEffect, useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Styles from './Blogs.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Blogs() {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchBlogs();\n  }, []);\n  const fetchBlogs = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get(`${process.env.REACT_APP_SERVER_URL}/api/blog`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setBlogs(response.data);\n    } catch (error) {\n      console.error('Error fetching blogs:', error);\n    }\n  };\n  const filteredBlogs = blogs.filter(blog => blog.title.toLowerCase().includes(searchTerm.toLowerCase()));\n  const handleCreateNew = () => {\n    navigate('/create-blog');\n  };\n  const calculateReadTime = text => {\n    const wordsPerMinute = 200;\n    const wordCount = text.split(/\\s+/).length;\n    const readTime = Math.ceil(wordCount / wordsPerMinute);\n    return `${readTime} min read`;\n  };\n  const formatDate = dateString => {\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Styles.blogsPageContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: Styles.leftPanel,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Blogs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), filteredBlogs.map(blog => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/blog/${blog._id}`,\n        className: Styles.blogLink,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: Styles.blogItem,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: Styles.blogHeader,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: Styles.author,\n              children: [\"By \", blog.author || 'Unknown']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: Styles.readTime,\n              children: calculateReadTime(blog.description)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: blog.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: Styles.description,\n            children: [blog.description.substring(0, 100), \"...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: Styles.date,\n            children: [blog.updatedAt !== blog.createdAt ? 'Edited' : 'Created', \": \", formatDate(blog.updatedAt || blog.createdAt || new Date())]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)\n      }, blog._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Styles.rightPanel,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search blogs...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        className: Styles.searchBar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateNew,\n        className: Styles.createButton,\n        children: \"Create New Blog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(Blogs, \"v/QVgWeNulkm4GdnRc7DUja0p44=\", false, function () {\n  return [useNavigate];\n});\n_c = Blogs;\nvar _c;\n$RefreshReg$(_c, \"Blogs\");","map":{"version":3,"names":["useEffect","useState","useNavigate","Link","axios","Styles","jsxDEV","_jsxDEV","Blogs","_s","blogs","setBlogs","searchTerm","setSearchTerm","navigate","fetchBlogs","token","localStorage","getItem","response","get","process","env","REACT_APP_SERVER_URL","headers","data","error","console","filteredBlogs","filter","blog","title","toLowerCase","includes","handleCreateNew","calculateReadTime","text","wordsPerMinute","wordCount","split","length","readTime","Math","ceil","formatDate","dateString","options","year","month","day","Date","toLocaleDateString","undefined","className","blogsPageContainer","children","leftPanel","fileName","_jsxFileName","lineNumber","columnNumber","map","to","_id","blogLink","blogItem","blogHeader","author","description","substring","date","updatedAt","createdAt","rightPanel","type","placeholder","value","onChange","e","target","searchBar","onClick","createButton","_c","$RefreshReg$"],"sources":["C:/Users/Sreeyas/OneDrive/Desktop/Blogging Application/client/src/Views/Blogs/Blogs.js"],"sourcesContent":["// Views/Blogs/Blogs.js\r\nimport { useEffect, useState } from 'react'\r\nimport { useNavigate, Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport Styles from './Blogs.module.css'\r\n\r\nexport function Blogs() {\r\n    const [blogs, setBlogs] = useState([])\r\n    const [searchTerm, setSearchTerm] = useState('')\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n        fetchBlogs()\r\n    }, [])\r\n\r\n    const fetchBlogs = async () => {\r\n        try {\r\n            const token = localStorage.getItem('token')\r\n            const response = await axios.get(`${process.env.REACT_APP_SERVER_URL}/api/blog`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            setBlogs(response.data)\r\n        } catch (error) {\r\n            console.error('Error fetching blogs:', error)\r\n        }\r\n    }\r\n\r\n    const filteredBlogs = blogs.filter(blog =>\r\n        blog.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n    )\r\n\r\n    const handleCreateNew = () => {\r\n        navigate('/create-blog')\r\n    }\r\n\r\n    const calculateReadTime = (text) => {\r\n        const wordsPerMinute = 200;\r\n        const wordCount = text.split(/\\s+/).length;\r\n        const readTime = Math.ceil(wordCount / wordsPerMinute);\r\n        return `${readTime} min read`;\r\n    }\r\n\r\n    const formatDate = (dateString) => {\r\n        const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n        return new Date(dateString).toLocaleDateString(undefined, options);\r\n    }\r\n\r\n    return (\r\n        <div className={Styles.blogsPageContainer}>\r\n            <div className={Styles.leftPanel}>\r\n                <h1>Blogs</h1>\r\n                {filteredBlogs.map(blog => (\r\n                    <Link to={`/blog/${blog._id}`} key={blog._id} className={Styles.blogLink}>\r\n                        <div className={Styles.blogItem}>\r\n                            <div className={Styles.blogHeader}>\r\n                                <span className={Styles.author}>By {blog.author || 'Unknown'}</span>\r\n                                <span className={Styles.readTime}>{calculateReadTime(blog.description)}</span>\r\n                            </div>\r\n                            <h2>{blog.title}</h2>\r\n                            <p className={Styles.description}>{blog.description.substring(0, 100)}...</p>\r\n                            <p className={Styles.date}>\r\n                                {blog.updatedAt !== blog.createdAt ? 'Edited' : 'Created'}: {formatDate(blog.updatedAt || blog.createdAt || new Date())}\r\n                            </p>\r\n                        </div>\r\n                    </Link>\r\n                ))}\r\n            </div>\r\n            <div className={Styles.rightPanel}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search blogs...\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                    className={Styles.searchBar}\r\n                />\r\n                <button onClick={handleCreateNew} className={Styles.createButton}>\r\n                    Create New Blog\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}